class Solution(object):
    def productExceptSelf(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        nums_len=len(nums)
        leftPro=[1]*len(nums)
        for i,num in enumerate(nums[:-1]):
            leftPro[i+1]=leftPro[i]*num
            
        right=1
        for i in range(nums_len-1,-1,-1):
            leftPro[i]*=right
            right*=nums[i]
        
        return leftPro
//不能使用乘法，设置两个数组，一个存顺序之前数字的乘积，另一个逆序之后的乘积，两者相乘即为要求。        
